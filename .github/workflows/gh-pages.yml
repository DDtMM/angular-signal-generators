# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Angular Github pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: User Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install Dependencies
        if:
          steps.cache-nodemodules.outputs.cache-hit != 'true' # if cache hits the skip this step.
        run: npm ci

      - name: Build Demo site
        run: npx ng build demo --base-href /angular-signal-generators/

      # Can't run KARMA in github automatication because it requires browser.  Maybe there is a work around.
      # The readme is used in the apidocs, so make sure coverage is correct.
      # - name: Build Coverage
      #  run: npx ng test signal-generators --code-coverage true --watch false

      # - name: Update coverage on readme
      #  run: npx istanbul-badges-readme --coverageDir=\"./coverage/signal-generators\"

      - name: Add api docs to demo site
        run: npx typedoc --out dist/demo/api

      # There is no url rewrite on github pages - so we have to copy the index page to 404.html.
      - name: Make 404 page from Index.
        run: npx cpy ./dist/demo/index.html ./ --rename 404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist/demo


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
