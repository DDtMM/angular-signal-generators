import { ChangeDetectionStrategy, Component } from '@angular/core';
import { DemoHostComponent } from '../../controls/demo-host.component';
import { SignalHeaderComponent } from '../../controls/signal-header.component';
import { FibonacciDemoComponent } from './fibonacci-demo/fibonacci-demo.component';
import { ToggleDemoComponent } from './toggle-demo/toggle-demo.component';


@Component({
  selector: 'app-timer-signal-page',
  standalone: true,
  imports: [DemoHostComponent, FibonacciDemoComponent, ToggleDemoComponent, SignalHeaderComponent],
  template: `
<app-signal-header fnName="sequenceSignal" />
<p>
  This accepts a sequence of values, and moves to the next value after every call to next.
  The sequence can be something simple as a toggle between states, or a complex sequence generated by a function.
</p>
<app-demo-host name="Simple Toggle"
  prefix="sequence-signal/toggle-demo/toggle-demo.component"
  [sourceNames]="['.ts', '.html']">
  <app-toggle-demo />
</app-demo-host>
<app-demo-host name="Generated Fibonacci Sequence"
  prefix="sequence-signal/fibonacci-demo/fibonacci-demo.component"
  [sourceNames]="['.ts', '.html']">
  <app-fibonacci-demo />
</app-demo-host>
`,
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class SequenceSignalPageComponent { }
